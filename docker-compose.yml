services:

# Database 
  database:
    container_name: database
    build:
      context: ./database
      dockerfile: Dockerfile
    env_file:
      - ./database/.env
    volumes:
      - database:/data/db
    restart: unless-stopped

# Adminer UI
  adminer:
    container_name: adminer
    image: adminer
    ports:
      - "8081:8080"
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy

# Backend FastAPI
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./backend/data:/app/backend/data
    restart: unless-stopped

 # RabbitMQ (con UI de administración)
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # RabbitMQ Monitor
  #monitor:
  #  container_name: monitor
  #  build:
  #    context: ./queue
  #    dockerfile: Dockerfile
  #  environment:
  #    RABBITMQ_HOST: rabbitmq   
  #    RABBITMQ_PORT: 5672
  #    RABBITMQ_USER: guest
  #    RABBITMQ_PASSWORD: guest
  #  depends_on:
  #    database:
  #      condition: service_healthy
  #    rabbitmq:
  #      condition: service_healthy

  preprocess:
    container_name: preprocess
    build:
      context: ./pipelines/preprocess   # carpeta donde está tu main.py y Dockerfile del worker
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./backend/data:/app/backend/data  # comparte la misma carpeta de datos que el backend
    restart: unless-stopped
  
  ollama:
    container_name: ollama
    build:
      context: ./pipelines/ollama
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./backend/data:/app/backend/data  # comparte la misma carpeta de datos que el backend
    restart: unless-stopped

# Volumes
volumes:
  database:
    driver: local
